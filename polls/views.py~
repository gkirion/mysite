from django.http import HttpResponse, HttpResponseRedirect
from django.template import loader
from django.shortcuts import get_object_or_404, render
from django.views import generic
from django.urls import reverse
from django.utils import timezone
from .models import Choice, Question, Human
from .forms import NameForm
from .forms import AutoForm


class IndexView(generic.ListView):
	template_name = 'polls/index.html'
	context_object_name = 'latest_question_list'
	
	def get_queryset(self):
		"""Return the last five published questions."""
		return Question.objects.filter(pub_date__lte=timezone.now()).order_by('-pub_date')[:5]

class DetailView(generic.DetailView):
	model = Question
	template_name = 'polls/detail.html'
	
	def get_queryset(self):
		"""
		Excludes any questions tha aren't published yet.
		"""
		return Question.objects.filter(pub_date__lte=timezone.now())

class ResultsView(generic.DetailView):
	model = Question
	template_name = 'polls/results.html'

def vote(request, question_id):
	question = get_object_or_404(Question, pk=question_id)
	try:
		selected_choice = question.choice_set.get(pk=request.POST['choice'])
	except (KeyError, Choice.DoesNotExist):
		return render(request, 'polls/detail.html', {
			'question': question,
			'error_message': "You didn't select a choice.",
		})
	else:
		selected_choice.votes += 1
		selected_choice.save()
		return HttpResponseRedirect(reverse('polls:results', args=(question.id,)))

def humans(request):
	humans_list = Human.objects.all()
	template = loader.get_template('polls/humans.html')
	context = {
		'humans_list': humans_list,
	}
	return HttpResponse(template.render(context, request))

def get_username(request):
	if request.method == 'POST':
		form = AutoForm(request.POST)
		if form.is_valid():
			username = form.cleaned_data['name']
			form.save()
			return HttpResponse('Thank you %s!' % username);
	else:
		form = AutoForm()
	return render(request, 'polls/username.html', {'form': form})

def purchase(request):
	if request.method == 'POST':
		form = PurchaseForm(request.POST)
		if form.is_valid():
			form.save()
			return HttpResponse('Have a nice day!')
	else:
		form = PurchaseForm()
	return render(request, 'polls/purchase.html', {'form': form})

